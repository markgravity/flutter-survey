// Mocks generated by Mockito 5.0.7 from annotations
// in survey/test/modules/side_menu/side_menu_presenter_test.dart.
// Do not manually edit this file.

import 'package:flutter/src/widgets/framework.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:survey/models/user_info.dart' as _i3;
import 'package:survey/modules/side_menu/side_menu_module.dart' as _i4;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeBuildContext extends _i1.Fake implements _i2.BuildContext {}

class _FakeUserInfo extends _i1.Fake implements _i3.UserInfo {}

/// A class which mocks [SideMenuView].
///
/// See the documentation for Mockito's code generation for more information.
class MockSideMenuView extends _i1.Mock implements _i4.SideMenuView {
  MockSideMenuView() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set delegate(_i4.SideMenuViewDelegate? _delegate) =>
      super.noSuchMethod(Invocation.setter(#delegate, _delegate),
          returnValueForMissingStub: null);
  @override
  _i2.BuildContext get context =>
      (super.noSuchMethod(Invocation.getter(#context),
          returnValue: _FakeBuildContext()) as _i2.BuildContext);
  @override
  void setUser(_i3.UserInfo? user) =>
      super.noSuchMethod(Invocation.method(#setUser, [user]),
          returnValueForMissingStub: null);
  @override
  void alert(Object? error) =>
      super.noSuchMethod(Invocation.method(#alert, [error]),
          returnValueForMissingStub: null);
}

/// A class which mocks [SideMenuRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockSideMenuRouter extends _i1.Mock implements _i4.SideMenuRouter {
  MockSideMenuRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void replaceToLoginScreen(_i2.BuildContext? context) =>
      super.noSuchMethod(Invocation.method(#replaceToLoginScreen, [context]),
          returnValueForMissingStub: null);
}

/// A class which mocks [SideMenuInteractor].
///
/// See the documentation for Mockito's code generation for more information.
class MockSideMenuInteractor extends _i1.Mock
    implements _i4.SideMenuInteractor {
  MockSideMenuInteractor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.UserInfo get authenticatedUser =>
      (super.noSuchMethod(Invocation.getter(#authenticatedUser),
          returnValue: _FakeUserInfo()) as _i3.UserInfo);
  @override
  set delegate(_i4.SideMenuInteractorDelegate? _delegate) =>
      super.noSuchMethod(Invocation.setter(#delegate, _delegate),
          returnValueForMissingStub: null);
  @override
  void logout() => super.noSuchMethod(Invocation.method(#logout, []),
      returnValueForMissingStub: null);
}
