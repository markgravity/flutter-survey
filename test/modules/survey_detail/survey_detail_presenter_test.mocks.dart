// Mocks generated by Mockito 5.0.7 from annotations
// in survey/test/modules/survey_detail/survey_detail_presenter_test.dart.
// Do not manually edit this file.

import 'package:flutter/src/widgets/framework.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rxdart/src/subjects/behavior_subject.dart' as _i2;
import 'package:survey/models/detailed_survey_info.dart' as _i6;
import 'package:survey/models/survey_info.dart' as _i4;
import 'package:survey/modules/survey_detail/survey_detail_module.dart' as _i5;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeBehaviorSubject<T> extends _i1.Fake
    implements _i2.BehaviorSubject<T> {}

class _FakeBuildContext extends _i1.Fake implements _i3.BuildContext {}

class _FakeSurveyInfo extends _i1.Fake implements _i4.SurveyInfo {}

/// A class which mocks [SurveyDetailView].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurveyDetailView extends _i1.Mock implements _i5.SurveyDetailView {
  MockSurveyDetailView() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BehaviorSubject<bool> get isProgressHUDShown => (super.noSuchMethod(
      Invocation.getter(#isProgressHUDShown),
      returnValue: _FakeBehaviorSubject<bool>()) as _i2.BehaviorSubject<bool>);
  @override
  set delegate(_i5.SurveyDetailViewDelegate? _delegate) =>
      super.noSuchMethod(Invocation.setter(#delegate, _delegate),
          returnValueForMissingStub: null);
  @override
  _i3.BuildContext get context =>
      (super.noSuchMethod(Invocation.getter(#context),
          returnValue: _FakeBuildContext()) as _i3.BuildContext);
  @override
  void setSurvey(_i4.SurveyInfo? survey) =>
      super.noSuchMethod(Invocation.method(#setSurvey, [survey]),
          returnValueForMissingStub: null);
  @override
  void showProgressHUD() =>
      super.noSuchMethod(Invocation.method(#showProgressHUD, []),
          returnValueForMissingStub: null);
  @override
  void dismissProgressHUD() =>
      super.noSuchMethod(Invocation.method(#dismissProgressHUD, []),
          returnValueForMissingStub: null);
  @override
  void alert(Object? error) =>
      super.noSuchMethod(Invocation.method(#alert, [error]),
          returnValueForMissingStub: null);
}

/// A class which mocks [SurveyDetailRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurveyDetailRouter extends _i1.Mock
    implements _i5.SurveyDetailRouter {
  MockSurveyDetailRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void pushToSurveyQuestionsScreen(_i3.BuildContext? context,
          {_i6.DetailedSurveyInfo? survey}) =>
      super.noSuchMethod(
          Invocation.method(
              #pushToSurveyQuestionsScreen, [context], {#survey: survey}),
          returnValueForMissingStub: null);
}

/// A class which mocks [SurveyDetailInteractor].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurveyDetailInteractor extends _i1.Mock
    implements _i5.SurveyDetailInteractor {
  MockSurveyDetailInteractor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.SurveyInfo get survey => (super.noSuchMethod(Invocation.getter(#survey),
      returnValue: _FakeSurveyInfo()) as _i4.SurveyInfo);
  @override
  set arguments(_i5.SurveyDetailArguments? _arguments) =>
      super.noSuchMethod(Invocation.setter(#arguments, _arguments),
          returnValueForMissingStub: null);
  @override
  set delegate(_i5.SurveyDetailInteractorDelegate? _delegate) =>
      super.noSuchMethod(Invocation.setter(#delegate, _delegate),
          returnValueForMissingStub: null);
  @override
  void fetchDetailedSurvey() =>
      super.noSuchMethod(Invocation.method(#fetchDetailedSurvey, []),
          returnValueForMissingStub: null);
}
