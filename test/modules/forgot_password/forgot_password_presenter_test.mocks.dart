// Mocks generated by Mockito 5.0.7 from annotations
// in survey/test/modules/forgot_password/forgot_password_presenter_test.dart.
// Do not manually edit this file.

import 'package:flutter/src/widgets/framework.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rxdart/src/subjects/behavior_subject.dart' as _i2;
import 'package:survey/modules/forgot_password/forgot_password_module.dart'
    as _i4;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeBehaviorSubject<T> extends _i1.Fake
    implements _i2.BehaviorSubject<T> {}

class _FakeBuildContext extends _i1.Fake implements _i3.BuildContext {}

/// A class which mocks [ForgotPasswordView].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgotPasswordView extends _i1.Mock
    implements _i4.ForgotPasswordView {
  MockForgotPasswordView() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BehaviorSubject<bool> get isProgressHUDShown => (super.noSuchMethod(
      Invocation.getter(#isProgressHUDShown),
      returnValue: _FakeBehaviorSubject<bool>()) as _i2.BehaviorSubject<bool>);
  @override
  set delegate(_i4.ForgotPasswordViewDelegate? _delegate) =>
      super.noSuchMethod(Invocation.setter(#delegate, _delegate),
          returnValueForMissingStub: null);
  @override
  _i3.BuildContext get context =>
      (super.noSuchMethod(Invocation.getter(#context),
          returnValue: _FakeBuildContext()) as _i3.BuildContext);
  @override
  void clearEmailTextField() =>
      super.noSuchMethod(Invocation.method(#clearEmailTextField, []),
          returnValueForMissingStub: null);
  @override
  void setResetButton({bool? isEnabled}) => super.noSuchMethod(
      Invocation.method(#setResetButton, [], {#isEnabled: isEnabled}),
      returnValueForMissingStub: null);
  @override
  void showResetSuccessfullyNotification() => super.noSuchMethod(
      Invocation.method(#showResetSuccessfullyNotification, []),
      returnValueForMissingStub: null);
  @override
  void showProgressHUD() =>
      super.noSuchMethod(Invocation.method(#showProgressHUD, []),
          returnValueForMissingStub: null);
  @override
  void dismissProgressHUD() =>
      super.noSuchMethod(Invocation.method(#dismissProgressHUD, []),
          returnValueForMissingStub: null);
  @override
  void alert(Object? error) =>
      super.noSuchMethod(Invocation.method(#alert, [error]),
          returnValueForMissingStub: null);
}

/// A class which mocks [ForgotPasswordInteractor].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgotPasswordInteractor extends _i1.Mock
    implements _i4.ForgotPasswordInteractor {
  MockForgotPasswordInteractor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set delegate(_i4.ForgotPasswordInteractorDelegate? _delegate) =>
      super.noSuchMethod(Invocation.setter(#delegate, _delegate),
          returnValueForMissingStub: null);
  @override
  void resetPassword({String? email}) =>
      super.noSuchMethod(Invocation.method(#resetPassword, [], {#email: email}),
          returnValueForMissingStub: null);
}

/// A class which mocks [ForgotPasswordRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgotPasswordRouter extends _i1.Mock
    implements _i4.ForgotPasswordRouter {
  MockForgotPasswordRouter() {
    _i1.throwOnMissingStub(this);
  }
}
