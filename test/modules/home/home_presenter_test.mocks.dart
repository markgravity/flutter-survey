// Mocks generated by Mockito 5.0.7 from annotations
// in survey/test/modules/home/home_presenter_test.dart.
// Do not manually edit this file.

import 'package:flutter/src/widgets/framework.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rxdart/src/subjects/behavior_subject.dart' as _i2;
import 'package:survey/models/survey_info.dart' as _i6;
import 'package:survey/models/user_info.dart' as _i5;
import 'package:survey/modules/home/home_module.dart' as _i4;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeBehaviorSubject<T> extends _i1.Fake
    implements _i2.BehaviorSubject<T> {}

class _FakeBuildContext extends _i1.Fake implements _i3.BuildContext {}

/// A class which mocks [HomeView].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeView extends _i1.Mock implements _i4.HomeView {
  MockHomeView() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BehaviorSubject<bool> get isProgressHUDShown => (super.noSuchMethod(
      Invocation.getter(#isProgressHUDShown),
      returnValue: _FakeBehaviorSubject<bool>()) as _i2.BehaviorSubject<bool>);
  @override
  set delegate(_i4.HomeViewDelegate? _delegate) =>
      super.noSuchMethod(Invocation.setter(#delegate, _delegate),
          returnValueForMissingStub: null);
  @override
  _i3.BuildContext get context =>
      (super.noSuchMethod(Invocation.getter(#context),
          returnValue: _FakeBuildContext()) as _i3.BuildContext);
  @override
  void setDateTime(DateTime? dateTime) =>
      super.noSuchMethod(Invocation.method(#setDateTime, [dateTime]),
          returnValueForMissingStub: null);
  @override
  void showUser(_i5.UserInfo? user) =>
      super.noSuchMethod(Invocation.method(#showUser, [user]),
          returnValueForMissingStub: null);
  @override
  void showSurveys(List<_i6.SurveyInfo>? surveys) =>
      super.noSuchMethod(Invocation.method(#showSurveys, [surveys]),
          returnValueForMissingStub: null);
  @override
  void beginSkeletonAnimation() =>
      super.noSuchMethod(Invocation.method(#beginSkeletonAnimation, []),
          returnValueForMissingStub: null);
  @override
  void stopSkeletonAnimation() =>
      super.noSuchMethod(Invocation.method(#stopSkeletonAnimation, []),
          returnValueForMissingStub: null);
  @override
  void alert(Object? error) =>
      super.noSuchMethod(Invocation.method(#alert, [error]),
          returnValueForMissingStub: null);
  @override
  void showProgressHUD() =>
      super.noSuchMethod(Invocation.method(#showProgressHUD, []),
          returnValueForMissingStub: null);
  @override
  void dismissProgressHUD() =>
      super.noSuchMethod(Invocation.method(#dismissProgressHUD, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [HomeRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRouter extends _i1.Mock implements _i4.HomeRouter {
  MockHomeRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void pushToSurveyDetail(
          {_i3.BuildContext? context, _i6.SurveyInfo? survey}) =>
      super.noSuchMethod(
          Invocation.method(
              #pushToSurveyDetail, [], {#context: context, #survey: survey}),
          returnValueForMissingStub: null);
}

/// A class which mocks [HomeInteractor].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeInteractor extends _i1.Mock implements _i4.HomeInteractor {
  MockHomeInteractor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set delegate(_i4.HomeInteractorDelegate? _delegate) =>
      super.noSuchMethod(Invocation.setter(#delegate, _delegate),
          returnValueForMissingStub: null);
  @override
  void getIsSurveysCached() =>
      super.noSuchMethod(Invocation.method(#getIsSurveysCached, []),
          returnValueForMissingStub: null);
  @override
  void fetchSurveys({bool? force = false}) =>
      super.noSuchMethod(Invocation.method(#fetchSurveys, [], {#force: force}),
          returnValueForMissingStub: null);
  @override
  void getAuthenticatedUser() =>
      super.noSuchMethod(Invocation.method(#getAuthenticatedUser, []),
          returnValueForMissingStub: null);
}
