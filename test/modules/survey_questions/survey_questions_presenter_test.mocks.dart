// Mocks generated by Mockito 5.0.7 from annotations
// in survey/test/modules/survey_questions/survey_questions_presenter_test.dart.
// Do not manually edit this file.

import 'package:flutter/src/widgets/framework.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rxdart/src/subjects/behavior_subject.dart' as _i2;
import 'package:survey/models/survey_question_info.dart' as _i4;
import 'package:survey/models/survey_submit_question_info.dart' as _i6;
import 'package:survey/modules/survey_questions/survey_questions_module.dart'
    as _i5;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeBehaviorSubject<T> extends _i1.Fake
    implements _i2.BehaviorSubject<T> {}

class _FakeBuildContext extends _i1.Fake implements _i3.BuildContext {}

class _FakeSurveyQuestionInfo extends _i1.Fake
    implements _i4.SurveyQuestionInfo {}

/// A class which mocks [SurveyQuestionsView].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurveyQuestionsView extends _i1.Mock
    implements _i5.SurveyQuestionsView {
  MockSurveyQuestionsView() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BehaviorSubject<bool> get isProgressHUDShown => (super.noSuchMethod(
      Invocation.getter(#isProgressHUDShown),
      returnValue: _FakeBehaviorSubject<bool>()) as _i2.BehaviorSubject<bool>);
  @override
  set delegate(_i5.SurveyQuestionsViewDelegate? _delegate) =>
      super.noSuchMethod(Invocation.setter(#delegate, _delegate),
          returnValueForMissingStub: null);
  @override
  _i3.BuildContext get context =>
      (super.noSuchMethod(Invocation.getter(#context),
          returnValue: _FakeBuildContext()) as _i3.BuildContext);
  @override
  void setQuestions(List<_i4.SurveyQuestionInfo>? questions) =>
      super.noSuchMethod(Invocation.method(#setQuestions, [questions]),
          returnValueForMissingStub: null);
  @override
  void showCloseConfirmDialog() =>
      super.noSuchMethod(Invocation.method(#showCloseConfirmDialog, []),
          returnValueForMissingStub: null);
  @override
  void moveTo(int? i) => super.noSuchMethod(Invocation.method(#moveTo, [i]),
      returnValueForMissingStub: null);
  @override
  void alert(Object? error) =>
      super.noSuchMethod(Invocation.method(#alert, [error]),
          returnValueForMissingStub: null);
  @override
  void showProgressHUD() =>
      super.noSuchMethod(Invocation.method(#showProgressHUD, []),
          returnValueForMissingStub: null);
  @override
  void dismissProgressHUD() =>
      super.noSuchMethod(Invocation.method(#dismissProgressHUD, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [SurveyQuestionsRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurveyQuestionsRouter extends _i1.Mock
    implements _i5.SurveyQuestionsRouter {
  MockSurveyQuestionsRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void pushToSurveyCompletedScreen(_i3.BuildContext? context,
          {_i4.SurveyQuestionInfo? outro}) =>
      super.noSuchMethod(
          Invocation.method(
              #pushToSurveyCompletedScreen, [context], {#outro: outro}),
          returnValueForMissingStub: null);
  @override
  void popBack(_i3.BuildContext? context) =>
      super.noSuchMethod(Invocation.method(#popBack, [context]),
          returnValueForMissingStub: null);
}

/// A class which mocks [SurveyQuestionsInteractor].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurveyQuestionsInteractor extends _i1.Mock
    implements _i5.SurveyQuestionsInteractor {
  MockSurveyQuestionsInteractor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i4.SurveyQuestionInfo> get questions => (super.noSuchMethod(
      Invocation.getter(#questions),
      returnValue: <_i4.SurveyQuestionInfo>[]) as List<_i4.SurveyQuestionInfo>);
  @override
  _i4.SurveyQuestionInfo get outro =>
      (super.noSuchMethod(Invocation.getter(#outro),
          returnValue: _FakeSurveyQuestionInfo()) as _i4.SurveyQuestionInfo);
  @override
  set arguments(_i5.SurveyQuestionsArguments? _arguments) =>
      super.noSuchMethod(Invocation.setter(#arguments, _arguments),
          returnValueForMissingStub: null);
  @override
  set delegate(_i5.SurveyQuestionsInteractorDelegate? _delegate) =>
      super.noSuchMethod(Invocation.setter(#delegate, _delegate),
          returnValueForMissingStub: null);
  @override
  void submit(List<_i6.SurveySubmitQuestionInfo>? questions) =>
      super.noSuchMethod(Invocation.method(#submit, [questions]),
          returnValueForMissingStub: null);
}
